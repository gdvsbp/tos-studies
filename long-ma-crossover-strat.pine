// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© gdvsbp

//@version=5
strategy("Long MA Crossover Strat", overlay=true, initial_capital = 5000)

currentBalance = strategy.initial_capital + strategy.netprofit
currentFuturesMarginPrice = (close * syminfo.pointvalue) * .06
QUANTITY = 1

if (syminfo.type == 'futures')
    QUANTITY := math.floor(currentBalance / currentFuturesMarginPrice / 2)

_high = high
_low = low
_time = time

colRed = #FF6666
colGrn = #66FF66
colBlu = #6666FF
colCyn = #008B8B
colMag = #FF1DCE
colYlw = #FFFF66

colSlowMa = colRed
colFastMa = colGrn

// Super slow MA
maBigFast = ta.sma(close, 100)
maBigSlow = ta.sma(close, 200)

// ATR
atr = ta.atr(14)

// MA
maFast = ta.ema(close, 5)
maSlow = ta.sma(close, 15)
maMacd = maFast - maSlow
maMacdSignal = ta.ema(maMacd, 9)
// MACD
[macd, signal, hist] = ta.macd(close, 12, 26, 9)
// RSI
rsi = ta.rsi(close, 14)
rsiMa = ta.sma(rsi, 3)
// Stochastic
stochK = ta.sma(ta.stoch(close, high, low, 14), 1)
stochD = ta.sma(stochK, 3)

trendingUp = maFast > maBigSlow and ta.rising(maBigFast, 5)
trendingDn = maFast < maBigSlow and ta.falling(maBigFast, 5)

plot(maBigFast, title = 'Big Fast MA', color = color.new(colFastMa, 33), linewidth = 1, style = plot.style_line)
maBigFastTop = maBigFast + atr
maBigFastBtm = maBigFast - atr
plotBigFastTop = plot(maBigFastTop, color = na)
plotBigFastBtm = plot(maBigFastBtm, color = na)
fill(plotBigFastTop, plotBigFastBtm, color=color.new(colFastMa, 90), title='MA Cloud1')

plot(maBigSlow, title = 'Big Slow MA', color = color.new(colSlowMa, 33), linewidth = 1, style = plot.style_line)
maBigSlowTop = maBigSlow + atr
maBigSlowBtm = maBigSlow - atr
plotBigSlowTop = plot(maBigSlowTop, color = na)
plotBigSlowBtm = plot(maBigSlowBtm, color = na)
fill(plotBigSlowTop, plotBigSlowBtm, color=color.new(colSlowMa, 90), title='MA Cloud2')

var color maFastColor = na
if (maFast > maBigFastTop and maFast > maBigSlowTop)
    maFastColor := colGrn
else if (maFast < maBigFastBtm and maFast < maBigSlowBtm)
    maFastColor := colRed
else
    maFastColor := colYlw
plot(maFast, title = 'Fast MA', color = maFastColor, linewidth = 2, style = plot.style_line)

lastMoveTooBig = (high[1] - low[1]) > atr * 2

if (lastMoveTooBig != true and ta.crossunder(close, maBigFast))
    strategy.entry('short', strategy.short, QUANTITY, stop = maBigFastTop)
    strategy.exit('short 1', from_entry = 'short', qty_percent = 100, limit = close - atr * 2, stop = high[1])
else if (lastMoveTooBig != true and ta.crossover(close, maBigFast))
    strategy.entry('long', strategy.long, QUANTITY, stop = maBigFastBtm)
    strategy.exit('long 1', from_entry = 'long', qty_percent = 100, limit = close + atr * 2, stop = low[1])