# TODO: log target entry and exit based on prior bar instead of -2/-1/0/1/2

def haClose = ohlc4;
def haOpen = (haOpen[1] + haClose[1]) / 2;
def haTrendUp = if haClose > haOpen then 1 else 0;
def haTrendDn = if haClose < haOpen then 1 else 0;
def haSignal =
  if haTrendUp == 1 and haTrendUp[1] == 1 then 1
  else if haTrendDn == 1 and haTrendDn[1] == 1 then -1
  else 0
;
def wasDoji =
    if (haOpen[1] < high[1] and haClose[1] < high[1]) and (haClose[1] > low[1] and haOpen[1] > low[1]) then 1 else 0;

def isDoji =
    if (haOpen[0] < high[0] and haClose[0] < high[0]) and (haClose[0] > low[0] and haOpen[0] > low[0]) then 1 else 0;

def goLong = wasDoji and haTrendUp;
def goShort = wasDoji and haTrendDn;

plot main =
    if isDoji then 0
    else if goLong then 1
    else if goShort then -1
    else Double.NaN;

main.SetPaintingStrategy(PaintingStrategy.VALUES_ABOVE);

def enterLevel = Round(ohlc4, 2);
def isSignificant = ( if (ATR() < (high - low)) then yes else no);

# Long alert
# TODO: this last bit shows an X if the signal's move is shorter than ATR, but it doesn't seem to work yet
AddChartBubble(main == 1 and isSignificant, haOpen, "In $" + enterLevel + ", stp $" + Round(low, 2), Color.UPTICK, no);
Alert((main == 1 and isSignificant), "Long in $" + enterLevel + ", stp $" + Round(low, 2), Alert.Bar, Sound.Bell);

# Short alert
AddChartBubble(main == -1 and isSignificant, haClose, "In $" + enterLevel + ", stp $" + Round(high, 2), Color.DOWNTICK, no);
Alert((main == -1 and isSignificant), "Short in $" + enterLevel + ", stp $" + Round(high, 2), Alert.Bar, Sound.Bell);

# END - Heikin_Ashi_Trend_Do