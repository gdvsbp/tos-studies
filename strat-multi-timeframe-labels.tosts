# # -------- 1 MONTH ------------
# def high1M = high(period = AggregationPeriod.MONTH);
# def open1M = open(period = AggregationPeriod.MONTH);
# def close1M = close(period = AggregationPeriod.MONTH);
# def low1M = low(period = AggregationPeriod.MONTH);

# def candle0_1M_insidebar =  (high1M < high1M[1] and low1M > low1M[1]) or (high1M == high1M[1] and low1M > low1M[1]) or (high1M < high1M[1] and low1M == low1M[1]) or (high1M == high1M[1] and low1M == low1M[1]);
# def candle0_1M_outsidebar =  high1M  > high1M[1] and low1M <  low1M[1];
# def candle0_1M_twoup  = high1M > high1M[1] and low1M >= low1M[1];
# def candle0_1M_twodown  = high1M <= high1M[1] and low1M < low1M[1];

# def candle1_1M_insidebar =  (high1M[1] < high1M[2] and low1M[1] > low1M[2]) or (high1M[1] == high1M[2] and low1M[1] > low1M[2]) or (high1M[1] < high1M[2] and low1M[1] == low1M[2]) or (high1M[1] == high1M[2] and low1M[1] == low1M[2]);
# def candle1_1M_outsidebar =  high1M[1]  > high1M[2] and low1M[1] <  low1M[2];
# def candle1_1M_twoup  = high1M[1] > high1M[2] and low1M[1] >= low1M[2];
# def candle1_1M_twodown  = high1M[1] <= high1M[2] and low1M[1] < low1M[2];

# def candle2_1M_insidebar =  (high1M[2] < high1M[3] and low1M[2] > low1M[3]) or (high1M[2] == high1M[3] and low1M[2] > low1M[3]) or (high1M[2] < high1M[3] and low1M[2] == low1M[3]) or (high1M[2] == high1M[3] and low1M[2] == low1M[3]);
# def candle2_1M_outsidebar =  high1M[2]  > high1M[3] and low1M[2] <  low1M[3];
# def candle2_1M_twoup  = high1M[2] > high1M[3] and low1M[2] >= low1M[3];
# def candle2_1M_twodown  = high1M[2] <= high1M[3] and low1M[2] < low1M[3];

# AddLabel(
#   yes,
#   "Month " + (if candle2_1M_insidebar then "1" else if candle2_1M_outsidebar then "3" else if candle2_1M_twoup then "2U" else "2D") + "-" + (if candle1_1M_insidebar then "1" else if candle1_1M_outsidebar then "3" else if candle1_1M_twoup then "2U" else "2D") + "-" + (if candle0_1M_insidebar then "1" else if candle0_1M_outsidebar then "3" else if candle0_1M_twoup then "2U" else "2D"),
#   if close1M > open1M then Color.UPTICK else if close1M < open1M then Color.DOWNTICK else Color.LIGHT_GRAY
# );

# -------- 1 WEEK ------------
def high1W = high(period = AggregationPeriod.WEEK);
def open1W = open(period = AggregationPeriod.WEEK);
def close1W = close(period = AggregationPeriod.WEEK);
def low1W = low(period = AggregationPeriod.WEEK);

def candle0_1W_insidebar =  (high1W < high1W[1] and low1W > low1W[1]) or (high1W == high1W[1] and low1W > low1W[1]) or (high1W < high1W[1] and low1W == low1W[1]) or (high1W == high1W[1] and low1W == low1W[1]);
def candle0_1W_outsidebar =  high1W  > high1W[1] and low1W <  low1W[1];
def candle0_1W_twoup  = high1W > high1W[1] and low1W >= low1W[1];
def candle0_1W_twodown  = high1W <= high1W[1] and low1W < low1W[1];

def candle1_1W_insidebar =  (high1W[1] < high1W[2] and low1W[1] > low1W[2]) or (high1W[1] == high1W[2] and low1W[1] > low1W[2]) or (high1W[1] < high1W[2] and low1W[1] == low1W[2]) or (high1W[1] == high1W[2] and low1W[1] == low1W[2]);
def candle1_1W_outsidebar =  high1W[1]  > high1W[2] and low1W[1] <  low1W[2];
def candle1_1W_twoup  = high1W[1] > high1W[2] and low1W[1] >= low1W[2];
def candle1_1W_twodown  = high1W[1] <= high1W[2] and low1W[1] < low1W[2];

def candle2_1W_insidebar =  (high1W[2] < high1W[3] and low1W[2] > low1W[3]) or (high1W[2] == high1W[3] and low1W[2] > low1W[3]) or (high1W[2] < high1W[3] and low1W[2] == low1W[3]) or (high1W[2] == high1W[3] and low1W[2] == low1W[3]);
def candle2_1W_outsidebar =  high1W[2]  > high1W[3] and low1W[2] <  low1W[3];
def candle2_1W_twoup  = high1W[2] > high1W[3] and low1W[2] >= low1W[3];
def candle2_1W_twodown  = high1W[2] <= high1W[3] and low1W[2] < low1W[3];

AddLabel(
  yes,
  "Week " + (if candle2_1W_insidebar then "1" else if candle2_1W_outsidebar then "3" else if candle2_1W_twoup then "2U" else "2D") + "-" + (if candle1_1W_insidebar then "1" else if candle1_1W_outsidebar then "3" else if candle1_1W_twoup then "2U" else "2D") + "-" + (if candle0_1W_insidebar then "1" else if candle0_1W_outsidebar then "3" else if candle0_1W_twoup then "2U" else "2D"),
  if close1W > open1W then Color.UPTICK else if close1W < open1W then Color.DOWNTICK else Color.LIGHT_GRAY
);

# -------- 1 DAY ------------
def high1D = high(period = AggregationPeriod.DAY);
def open1D = open(period = AggregationPeriod.DAY);
def close1D = close(period = AggregationPeriod.DAY);
def low1D = low(period = AggregationPeriod.DAY);

def candle0_1D_insidebar =  (high1D < high1D[1] and low1D > low1D[1]) or (high1D == high1D[1] and low1D > low1D[1]) or (high1D < high1D[1] and low1D == low1D[1]) or (high1D == high1D[1] and low1D == low1D[1]);
def candle0_1D_outsidebar =  high1D  > high1D[1] and low1D <  low1D[1];
def candle0_1D_twoup  = high1D > high1D[1] and low1D >= low1D[1];
def candle0_1D_twodown  = high1D <= high1D[1] and low1D < low1D[1];

def candle1_1D_insidebar =  (high1D[1] < high1D[2] and low1D[1] > low1D[2]) or (high1D[1] == high1D[2] and low1D[1] > low1D[2]) or (high1D[1] < high1D[2] and low1D[1] == low1D[2]) or (high1D[1] == high1D[2] and low1D[1] == low1D[2]);
def candle1_1D_outsidebar =  high1D[1]  > high1D[2] and low1D[1] <  low1D[2];
def candle1_1D_twoup  = high1D[1] > high1D[2] and low1D[1] >= low1D[2];
def candle1_1D_twodown  = high1D[1] <= high1D[2] and low1D[1] < low1D[2];

def candle2_1D_insidebar =  (high1D[2] < high1D[3] and low1D[2] > low1D[3]) or (high1D[2] == high1D[3] and low1D[2] > low1D[3]) or (high1D[2] < high1D[3] and low1D[2] == low1D[3]) or (high1D[2] == high1D[3] and low1D[2] == low1D[3]);
def candle2_1D_outsidebar =  high1D[2]  > high1D[3] and low1D[2] <  low1D[3];
def candle2_1D_twoup  = high1D[2] > high1D[3] and low1D[2] >= low1D[3];
def candle2_1D_twodown  = high1D[2] <= high1D[3] and low1D[2] < low1D[3];

AddLabel(
  yes,
  "Day " + (if candle2_1D_insidebar then "1" else if candle2_1D_outsidebar then "3" else if candle2_1D_twoup then "2U" else "2D") + "-" + (if candle1_1D_insidebar then "1" else if candle1_1D_outsidebar then "3" else if candle1_1D_twoup then "2U" else "2D") + "-" + (if candle0_1D_insidebar then "1" else if candle0_1D_outsidebar then "3" else if candle0_1D_twoup then "2U" else "2D"),
  if close1D > open1D then Color.UPTICK else if close1D < open1D then Color.DOWNTICK else Color.LIGHT_GRAY
);

# -------- 1 HOUR ------------
def high1H = high(period = AggregationPeriod.HOUR);
def open1H = open(period = AggregationPeriod.HOUR);
def close1H = close(period = AggregationPeriod.HOUR);
def low1H = low(period = AggregationPeriod.HOUR);

def candle0_1H_insidebar =  (high1H < high1H[1] and low1H > low1H[1]) or (high1H == high1H[1] and low1H > low1H[1]) or (high1H < high1H[1] and low1H == low1H[1]) or (high1H == high1H[1] and low1H == low1H[1]);
def candle0_1H_outsidebar =  high1H  > high1H[1] and low1H <  low1H[1];
def candle0_1H_twoup  = high1H > high1H[1] and low1H >= low1H[1];
def candle0_1H_twodown  = high1H <= high1H[1] and low1H < low1H[1];

def candle1_1H_insidebar =  (high1H[1] < high1H[2] and low1H[1] > low1H[2]) or (high1H[1] == high1H[2] and low1H[1] > low1H[2]) or (high1H[1] < high1H[2] and low1H[1] == low1H[2]) or (high1H[1] == high1H[2] and low1H[1] == low1H[2]);
def candle1_1H_outsidebar =  high1H[1]  > high1H[2] and low1H[1] <  low1H[2];
def candle1_1H_twoup  = high1H[1] > high1H[2] and low1H[1] >= low1H[2];
def candle1_1H_twodown  = high1H[1] <= high1H[2] and low1H[1] < low1H[2];

def candle2_1H_insidebar =  (high1H[2] < high1H[3] and low1H[2] > low1H[3]) or (high1H[2] == high1H[3] and low1H[2] > low1H[3]) or (high1H[2] < high1H[3] and low1H[2] == low1H[3]) or (high1H[2] == high1H[3] and low1H[2] == low1H[3]);
def candle2_1H_outsidebar =  high1H[2]  > high1H[3] and low1H[2] <  low1H[3];
def candle2_1H_twoup  = high1H[2] > high1H[3] and low1H[2] >= low1H[3];
def candle2_1H_twodown  = high1H[2] <= high1H[3] and low1H[2] < low1H[3];

AddLabel(
  yes,
  "Hour " + (if candle2_1H_insidebar then "1" else if candle2_1H_outsidebar then "3" else if candle2_1H_twoup then "2U" else "2D") + "-" + (if candle1_1H_insidebar then "1" else if candle1_1H_outsidebar then "3" else if candle1_1H_twoup then "2U" else "2D") + "-" + (if candle0_1H_insidebar then "1" else if candle0_1H_outsidebar then "3" else if candle0_1H_twoup then "2U" else "2D"),
  if close1H > open1H then Color.UPTICK else if close1H < open1H then Color.DOWNTICK else Color.LIGHT_GRAY
);

# -------- 15 MIN ------------
def high15M = high(period = AggregationPeriod.FIFTEEN_MIN);
def open15M = open(period = AggregationPeriod.FIFTEEN_MIN);
def close15M = close(period = AggregationPeriod.FIFTEEN_MIN);
def low15M = low(period = AggregationPeriod.FIFTEEN_MIN);

def candle0_15M_insidebar =  (high15M < high15M[1] and low15M > low15M[1]) or (high15M == high15M[1] and low15M > low15M[1]) or (high15M < high15M[1] and low15M == low15M[1]) or (high15M == high15M[1] and low15M == low15M[1]);
def candle0_15M_outsidebar =  high15M  > high15M[1] and low15M <  low15M[1];
def candle0_15M_twoup  = high15M > high15M[1] and low15M >= low15M[1];
def candle0_15M_twodown  = high15M <= high15M[1] and low15M < low15M[1];

def candle1_15M_insidebar =  (high15M[1] < high15M[2] and low15M[1] > low15M[2]) or (high15M[1] == high15M[2] and low15M[1] > low15M[2]) or (high15M[1] < high15M[2] and low15M[1] == low15M[2]) or (high15M[1] == high15M[2] and low15M[1] == low15M[2]);
def candle1_15M_outsidebar =  high15M[1]  > high15M[2] and low15M[1] <  low15M[2];
def candle1_15M_twoup  = high15M[1] > high15M[2] and low15M[1] >= low15M[2];
def candle1_15M_twodown  = high15M[1] <= high15M[2] and low15M[1] < low15M[2];

def candle2_15M_insidebar =  (high15M[2] < high15M[3] and low15M[2] > low15M[3]) or (high15M[2] == high15M[3] and low15M[2] > low15M[3]) or (high15M[2] < high15M[3] and low15M[2] == low15M[3]) or (high15M[2] == high15M[3] and low15M[2] == low15M[3]);
def candle2_15M_outsidebar =  high15M[2]  > high15M[3] and low15M[2] <  low15M[3];
def candle2_15M_twoup  = high15M[2] > high15M[3] and low15M[2] >= low15M[3];
def candle2_15M_twodown  = high15M[2] <= high15M[3] and low15M[2] < low15M[3];

AddLabel(
  yes,
  "15 " + (if candle2_15M_insidebar then "1" else if candle2_15M_outsidebar then "3" else if candle2_15M_twoup then "2U" else "2D") + "-" + (if candle1_15M_insidebar then "1" else if candle1_15M_outsidebar then "3" else if candle1_15M_twoup then "2U" else "2D") + "-" + (if candle0_15M_insidebar then "1" else if candle0_15M_outsidebar then "3" else if candle0_15M_twoup then "2U" else "2D"),
  if close15M > open15M then Color.UPTICK else if close15M < open15M then Color.DOWNTICK else Color.LIGHT_GRAY
);
