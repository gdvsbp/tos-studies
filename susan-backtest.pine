// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© bdoooh

//@version=5
strategy("Susan Backtest", overlay=true)

start = timestamp('Jan 01 2022 00:00:00')
end = timestamp('Dec 10 2022 00:00:00')

[macd, signal, hist] = ta.macd(close, 12, 26, 9)
atr = ta.atr(14)

stopLoss = low - atr * 2
takeProfit = high + atr * 2

LongEntry = ta.crossover(macd, signal)
LongExit = ta.crossunder(macd, signal)

var previousPeak = high
var previousPeakIndex = bar_index
var currentPeak = high
var currentPeakIndex = bar_index
var peakLine = line.new(x1 = 0, y1 = 0, x2 = 0, y2 = 0)

calcPeaks(high) =>
    if ((high[2] < high[1] and high[0] < high[1]) or (high[3] < high[2] and high[2] == high[1] and high[0] < high[1]) or (high[4] < high[3] and high[3] == high[1] and high[2] == high[1] and high[0] < high[1]))
        high[1]
    else
        na

peaksV = calcPeaks(high)

if (peaksV)
    peaksV := high[1]
    // track the previous and current peak
    previousPeak := currentPeak
    previousPeakIndex := currentPeakIndex
    currentPeak := high[1]
    currentPeakIndex := bar_index[1]

// example of when a peak is lower than the previous peak we delete any old lines and draw a new line connecting them
if (currentPeak < previousPeak)
    line.delete(peakLine)
    peakLine := line.new(x1 = previousPeakIndex, y1 = previousPeak, x2 = currentPeakIndex, y2 = currentPeak, xloc = xloc.bar_index, extend = extend.right)
    line.set_color(id = peakLine, color = color.yellow)
else
    line.delete(peakLine)

peakPrice = line.get_price(peakLine, bar_index)

hasCrossedPeak = close > peakPrice

if (time >= start and time < end)
    if (hasCrossedPeak)
        strategy.entry('long', strategy.long, 100)
        strategy.exit('exit', 'long', stop = stopLoss, limit = takeProfit)
    // if (LongEntry)
    //     strategy.entry('long', strategy.long, 100)
    //     strategy.exit('exit', 'long', stop = stopLoss, limit = takeProfit)
    // if (LongExit)
    //     strategy.close('long', 100)

// if (longCondition)
//     strategy.entry("My Long Entry Id", strategy.long)

// shortCondition = ta.crossunder(macd, signal)
// if (shortCondition)
//     strategy.entry("My Short Entry Id", strategy.short)
