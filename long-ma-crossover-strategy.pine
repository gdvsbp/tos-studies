// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© gdvsbp

//@version=5
strategy("Long MA Crossover Strategy", overlay=true, initial_capital = 10000)

var PROFIT_TARGET_MULTIPLIER = 3.5

currentBalance = strategy.initial_capital + strategy.netprofit
currentFuturesMarginPrice = (close * syminfo.pointvalue) * .06
QUANTITY = 1

if (syminfo.type == 'futures')
    QUANTITY := math.floor(currentBalance / currentFuturesMarginPrice / 2)
else
    QUANTITY := math.floor(strategy.equity / close)

_high = high
_low = low
_time = time

colRed = #FF6666
colGrn = #66FF66
colBlu = #6666FF
colCyn = #008B8B
colMag = #FF1DCE
colYlw = #FFFF66

colSlowMa = colRed
colFastMa = colGrn

// Super slow MA
ma_25 = ta.sma(close, 25)
ma_50 = ta.sma(close, 50)
maBigFast = ta.sma(close, 100)
maBigSlow = ta.sma(close, 200)
maVolume = ta.sma(volume, 20)

// ATR
atr = ta.atr(14)
lastAtr = atr

plot(atr, title = 'ATR')

// MA
maFast = ta.ema(close, 5)
maSlow = ta.sma(close, 15)
maMacd = maFast - maSlow
maMacdSignal = ta.ema(maMacd, 9)
// MACD
[macd, signal, hist] = ta.macd(close, 12, 26, 9)
// RSI
rsi = ta.rsi(close, 14)
rsiMa = ta.sma(rsi, 3)
// Stochastic
stochK = ta.sma(ta.stoch(close, high, low, 14), 1)
stochD = ta.sma(stochK, 3)

plot(ma_25, title = 'SMA 25', color = colMag, linewidth = 1, style = plot.style_line)

plot(ma_50, title = 'SMA 50', color = colCyn, linewidth = 1, style = plot.style_line)

plot(maBigFast, title = 'SMA 100', color = color.new(colFastMa, 33), linewidth = 1, style = plot.style_line)
maBigFastTop = maBigFast + atr
maBigFastBtm = maBigFast - atr
plotBigFastTop = plot(maBigFastTop, color = na)
plotBigFastBtm = plot(maBigFastBtm, color = na)
// fill(plotBigFastTop, plotBigFastBtm, color=color.new(colFastMa, 90), title='MA Cloud1')

plot(maBigSlow, title = 'SMA 200', color = color.new(colSlowMa, 33), linewidth = 1, style = plot.style_line)
maBigSlowTop = maBigSlow + atr
maBigSlowBtm = maBigSlow - atr
plotBigSlowTop = plot(maBigSlowTop, color = na)
plotBigSlowBtm = plot(maBigSlowBtm, color = na)
// fill(plotBigSlowTop, plotBigSlowBtm, color=color.new(colSlowMa, 90), title='MA Cloud2')

trendingUp = maFast > maBigSlow and ta.rising(maBigFast, 5)
trendingDn = maFast < maBigSlow and ta.falling(maBigFast, 5)
trendingSuperUp = maBigFastBtm > maBigSlowTop and ta.rising(maBigFast, 5) and ta.rising(maBigSlow, 5)
trendingSuperDn = maBigFastTop < maBigSlowBtm and ta.falling(maBigFast, 5) and ta.falling(maBigSlow, 5)

var color maFastColor = na
if (maFast > maBigFastTop and maFast > maBigSlowTop)
    maFastColor := colGrn
else if (maFast < maBigFastBtm and maFast < maBigSlowBtm)
    maFastColor := colRed
else
    maFastColor := colYlw
// plot(maFast, title = 'Fast MA', color = maFastColor, linewidth = 2, style = plot.style_line)

lastMoveTooBig = (high[1] - low[1]) > lastAtr * 2

// TODO: check if crossover is > 50-60% candle body before going in
crossUnder = ta.crossunder(close, maBigFast)
crossOver = ta.crossover(close, maBigFast)
subCrossOver = ta.crossover(close, ma_50)
subCrossUnder = ta.crossunder(close, ma_50)
superSubCrossOver = ta.crossover(close, ma_25)
superSubCrossUnder = ta.crossunder(close, ma_25)

// NOTE: taking the most distant high/low from the last 4 bars to act as a stop... raises success rate to 60%+
shortStop = math.max(high[2], high[1], high[3], high[4])
longStop = math.min(low[2], low[1], low[3], low[4])

var label longBuyLabel = na
var label shortBuyLabel = na
var label exitLongLabel = na
var label coverShortLabel = na

var float shortProfitTarget = na
var float longProfitTarget = na

var float shortTakeProfitStep1 = na
var float shortTakeProfitStep2 = na
var float shortTakeProfitStep3 = na
var float shortTakeProfitStep4 = na

var float longTakeProfitStep1 = na
var float longTakeProfitStep2 = na
var float longTakeProfitStep3 = na
var float longTakeProfitStep4 = na

// Dynamic Profit Target with Bollinger Bands {
bbPeriod = 14
bbStdDeviation = 3
bbThreshold = 15

[upper, middle, lower] = ta.bb(close, bbPeriod, bbStdDeviation)

// override profit target with dynamic bb one
PROFIT_TARGET_MULTIPLIER := math.round(((upper - lower) / atr * 10) / 10)

// check the upper and lower diff, if it's less than the thresholder than it's conslidating
isChartConsolidating = upper - lower < bbThreshold
// }

// Only update the profit targets when there is currently no active position so we aren't constantly
// moving the target up up and up
if (strategy.position_size == 0)
    shortProfitTarget := close - lastAtr * PROFIT_TARGET_MULTIPLIER
    shortTakeProfitStep1 := close - lastAtr * 1.5
    shortTakeProfitStep2 := close - lastAtr * 2

    longProfitTarget := close + lastAtr * PROFIT_TARGET_MULTIPLIER
    longTakeProfitStep1 := close + lastAtr * 1.5
    longTakeProfitStep2 := close + lastAtr * 2

plot(shortStop, 'Short Stop', style = plot.style_line, color = color.maroon)
plot(shortProfitTarget, 'Short Target', style = plot.style_line, color = color.maroon)
plot(longStop, 'Long Stop', style = plot.style_line, color = color.olive)
plot(longProfitTarget, 'Long Target', style = plot.style_line, color = color.olive)

// shortCondition = (subCrossUnder and close < maBigFast) or (superSubCrossUnder and close < ma_50 and close < maBigFast)
shortCondition = ta.crossunder(ma_25, ma_50)
longCondition = (subCrossOver and close > maBigFast) or (superSubCrossOver and close > ma_50 and close > maBigFast)

// only make new entries if we have no positions (duh)
if (strategy.position_size == 0)
    if (lastMoveTooBig != true and crossUnder)
        strategy.entry('Short', strategy.short, QUANTITY)
    else if (lastMoveTooBig != true and crossOver or (trendingUp and longCondition))
        strategy.entry('Long', strategy.long, QUANTITY)
else if (strategy.position_size < 0)
    strategy.exit('Cover', from_entry = 'Short', qty_percent = 100, limit = shortProfitTarget, stop = shortStop)
else if (strategy.position_size > 0)
    strategy.exit('Sell', from_entry = 'Long', qty_percent = 100, limit = longProfitTarget, stop = longStop)

